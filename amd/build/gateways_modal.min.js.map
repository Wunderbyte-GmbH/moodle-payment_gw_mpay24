{"version":3,"file":"gateways_modal.min.js","sources":["../src/gateways_modal.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is responsible for mpay24 content in the gateways modal.\n *\n * @module     paygw_mpay24/gateway_modal\n * @copyright  2022 Wunderbyte Gmbh <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Repository from './repository';\nimport Templates from 'core/templates';\nimport Truncate from 'core/truncate';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {\n    get_string as getString\n} from 'core/str';\n\n/**\n * Creates and shows a modal that contains a placeholder.\n *\n * @returns {Promise<Modal>}\n */\nconst showModalWithPlaceholder = async() => {\n    const modal = await ModalFactory.create({\n        body: await Templates.render('paygw_mpay24/mpay24_button_placeholder', {})\n    });\n    modal.show();\n    return modal;\n};\n\n/**\n * Process the payment.\n *\n * @param {string} component Name of the component that the itemId belongs to\n * @param {string} paymentArea The area of the component that the itemId belongs to\n * @param {number} itemId An internal identifier that is used by the component\n * @param {string} description Description of the payment\n * @returns {Promise<string>}\n */\nexport const process = (component, paymentArea, itemId, description) => {\n    return Promise.all([\n            showModalWithPlaceholder(),\n            Repository.getConfigForJs(component, paymentArea, itemId),\n        ])\n        .then(([modal, mpay24Config]) => {\n            return Promise.all([\n                modal,\n                mpay24Config,\n            ]);\n        })\n        .then(([modal, mpay24Config]) => {\n            require(['jquery', 'paygw_mpay24/redirectpayment'], function($, redirectpayment) {\n                $(document).ready(function() {\n                    redirectpayment.init(component,\n                                   paymentArea,\n                                   itemId,\n                                   mpay24Config.tid);\n                });\n               });\n\n            return '';\n\n        }).then(x => {\n            const promise = new Promise(resolve => {\n                window.addEventListener('onbeforeunload', (e) => {\n                    promise.resolve();\n                });\n            });\n            return promise;\n        });\n};"],"names":["showModalWithPlaceholder","async","modal","ModalFactory","create","body","Templates","render","show","component","paymentArea","itemId","description","Promise","all","Repository","getConfigForJs","then","_ref","mpay24Config","_ref2","require","$","redirectpayment","document","ready","init","tid","x","promise","resolve","window","addEventListener","e"],"mappings":";;;;;;;4NAsCMA,yBAA2BC,gBACvBC,YAAcC,uBAAaC,OAAO,CACpCC,WAAYC,mBAAUC,OAAO,yCAA0C,aAE3EL,MAAMM,OACCN,wBAYY,CAACO,UAAWC,YAAaC,OAAQC,cAC7CC,QAAQC,IAAI,CACXd,2BACAe,WAAWC,eAAeP,UAAWC,YAAaC,UAErDM,MAAKC,WAAEhB,MAAOiB,0BACJN,QAAQC,IAAI,CACfZ,MACAiB,kBAGPF,MAAKG,YAAElB,MAAOiB,2BACXE,QAAQ,CAAC,SAAU,iCAAiC,SAASC,EAAGC,iBAC5DD,EAAEE,UAAUC,OAAM,WACdF,gBAAgBG,KAAKjB,UACNC,YACAC,OACAQ,aAAaQ,WAI7B,MAERV,MAAKW,UACEC,QAAU,IAAIhB,SAAQiB,UACxBC,OAAOC,iBAAiB,kBAAmBC,IACvCJ,QAAQC,uBAGTD"}